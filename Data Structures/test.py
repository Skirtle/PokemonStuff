key = 3

data = [
    0x03, 0x01, 0x02, 0x03,
    0x07, 0x05, 0x06, 0x07,
    0x0B, 0x09, 0x0A, 0x0B,
    0x0F, 0x0D, 0x0E, 0x0F,
    0x13, 0x11, 0x12, 0x13,
    0x17, 0x15, 0x16, 0x17,
    0x27, 0x25, 0x26, 0x27,
    0x2B, 0x29, 0x2A, 0x2B,
    0x2F, 0x2D, 0x2E, 0x2F,
    0x1B, 0x19, 0x1A, 0x1B,
    0x1F, 0x1D, 0x1E, 0x1F,
    0x23, 0x21, 0x22, 0x23,
]

decrypted = []

# Decrypt 4-byte chunks by XOR with key
for i in range(0, len(data), 4):
    chunk = (data[i] |
             (data[i+1] << 8) |
             (data[i+2] << 16) |
             (data[i+3] << 24))
    chunk ^= key
    decrypted.extend([
        chunk & 0xFF,
        (chunk >> 8) & 0xFF,
        (chunk >> 16) & 0xFF,
        (chunk >> 24) & 0xFF,
    ])

# Calculate checksum on decrypted data as 16-bit LE words
sum_16 = 0
for i in range(0, len(decrypted), 2):
    pair_value = decrypted[i] | (decrypted[i+1] << 8)
    sum_16 = (sum_16 + pair_value) & 0xFFFF

print(f"Checksum: {sum_16} (decimal), 0x{sum_16:04X} (hex)")
